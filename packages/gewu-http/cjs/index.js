var f=Object.defineProperty,g=Object.defineProperties,I=Object.getOwnPropertyDescriptor,x=Object.getOwnPropertyDescriptors,F=Object.getOwnPropertyNames,P=Object.getOwnPropertySymbols;var l=Object.prototype.hasOwnProperty,A=Object.prototype.propertyIsEnumerable;var T=(o,r,e)=>r in o?f(o,r,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[r]=e,d=(o,r)=>{for(var e in r||(r={}))l.call(r,e)&&T(o,e,r[e]);if(P)for(var e of P(r))A.call(r,e)&&T(o,e,r[e]);return o},R=(o,r)=>g(o,x(r));var O=(o,r)=>{for(var e in r)f(o,e,{get:r[e],enumerable:!0})},Z=(o,r,e,t)=>{if(r&&typeof r=="object"||typeof r=="function")for(let n of F(r))!l.call(o,n)&&n!==e&&f(o,n,{get:()=>r[n],enumerable:!(t=I(r,n))||t.enumerable});return o};var b=o=>Z(f({},"__esModule",{value:!0}),o);var y=(o,r,e)=>new Promise((t,n)=>{var s=a=>{try{m(e.next(a))}catch(u){n(u)}},h=a=>{try{m(e.throw(a))}catch(u){n(u)}},m=a=>a.done?t(a.value):Promise.resolve(a.value).then(s,h);m((e=e.apply(o,r)).next())});var j={};O(j,{fetcher:()=>p,gewuHTTP:()=>i});module.exports=b(j);function w(o){let r=o.issues[0];typeof window!="undefined"&&console.error("[gewu-http] error issue:",r);let e=r.message;c.i18n[e]&&(e=c.i18n[e]);let t=new Error(e);return t.path=r.path[0],t}function q(o,r){try{return o.parse(r)}catch(e){throw w(e)}}function v(o,r,e){try{let t={[r]:e[r]};return o.pick({[r]:!0}).parse(t)}catch(t){throw w(t)}}var c={parse:q,pickParse:v,i18n:{},errorFlat:w};function E(o){let r=o.status;return r>=200&&r<=299?o.json():o.json().then(e=>{throw typeof e=="object"?e.message?new Error(e.message):e:new Error(e)})}var p=(o,r,e)=>y(void 0,null,function*(){let t=d({method:r.method},e);if(r.method==="GET"){let n=new URLSearchParams(o).toString();return fetch(p.baseURL+r.url+"?"+n,t).then(E)}try{let n=yield fetch(p.baseURL+r.url,R(d({},t),{body:JSON.stringify(o)})).then(E);return c.parse(r.responseSchema,n)}catch(n){throw i.onResponseError&&i.onResponseError(n),n}});p.baseURL="";var S=[],z=({method:o,requestSchema:r,responseSchema:e,url:t})=>{let n=(s,h,m)=>y(void 0,null,function*(){if(h=h||i.baseFetcher,!h)throw new Error("Not found fetcher: "+n.url);try{s=c.parse(r,s)}catch(u){throw i.onRequireError&&i.onRequireError(u),u}return yield h(s,n,m)});return n.requestSchema=r,n.responseSchema=e,n.url=t,n.method=o,n.typeofFn=null,n.use=s=>(S.push({api:n,service:s}),s),n},i={api:z,baseFetcher:p,onRequireError:void 0,onResponseError:void 0,useControllers:o=>{S.forEach(r=>{o(r.api,r.service)})},setI18n:o=>{c.i18n=o}};
